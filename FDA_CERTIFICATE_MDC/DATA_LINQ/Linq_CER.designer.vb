'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FDA_CFS_CENTER_DEMO4")>  _
Partial Public Class Linq_CERDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertGEN_RCV_NUMBER(instance As GEN_RCV_NUMBER)
    End Sub
  Partial Private Sub UpdateGEN_RCV_NUMBER(instance As GEN_RCV_NUMBER)
    End Sub
  Partial Private Sub DeleteGEN_RCV_NUMBER(instance As GEN_RCV_NUMBER)
    End Sub
  Partial Private Sub InsertMAS_PROCESS(instance As MAS_PROCESS)
    End Sub
  Partial Private Sub UpdateMAS_PROCESS(instance As MAS_PROCESS)
    End Sub
  Partial Private Sub DeleteMAS_PROCESS(instance As MAS_PROCESS)
    End Sub
  Partial Private Sub InsertCFS_FOOD_COUNTRY(instance As CFS_FOOD_COUNTRY)
    End Sub
  Partial Private Sub UpdateCFS_FOOD_COUNTRY(instance As CFS_FOOD_COUNTRY)
    End Sub
  Partial Private Sub DeleteCFS_FOOD_COUNTRY(instance As CFS_FOOD_COUNTRY)
    End Sub
  Partial Private Sub InsertCFS_FOOD_FML(instance As CFS_FOOD_FML)
    End Sub
  Partial Private Sub UpdateCFS_FOOD_FML(instance As CFS_FOOD_FML)
    End Sub
  Partial Private Sub DeleteCFS_FOOD_FML(instance As CFS_FOOD_FML)
    End Sub
  Partial Private Sub InsertCER_FOOD_STAFF(instance As CER_FOOD_STAFF)
    End Sub
  Partial Private Sub UpdateCER_FOOD_STAFF(instance As CER_FOOD_STAFF)
    End Sub
  Partial Private Sub DeleteCER_FOOD_STAFF(instance As CER_FOOD_STAFF)
    End Sub
  Partial Private Sub InsertMAS_STAFF_TYPE(instance As MAS_STAFF_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_STAFF_TYPE(instance As MAS_STAFF_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_STAFF_TYPE(instance As MAS_STAFF_TYPE)
    End Sub
  Partial Private Sub InsertMAS_STATUS1(instance As MAS_STATUS1)
    End Sub
  Partial Private Sub UpdateMAS_STATUS1(instance As MAS_STATUS1)
    End Sub
  Partial Private Sub DeleteMAS_STATUS1(instance As MAS_STATUS1)
    End Sub
  Partial Private Sub InsertCFS_FOOD_STAFF_REMARK_VERSION(instance As CFS_FOOD_STAFF_REMARK_VERSION)
    End Sub
  Partial Private Sub UpdateCFS_FOOD_STAFF_REMARK_VERSION(instance As CFS_FOOD_STAFF_REMARK_VERSION)
    End Sub
  Partial Private Sub DeleteCFS_FOOD_STAFF_REMARK_VERSION(instance As CFS_FOOD_STAFF_REMARK_VERSION)
    End Sub
  Partial Private Sub InsertCER_FOOD_SELECT_ATTACH(instance As CER_FOOD_SELECT_ATTACH)
    End Sub
  Partial Private Sub UpdateCER_FOOD_SELECT_ATTACH(instance As CER_FOOD_SELECT_ATTACH)
    End Sub
  Partial Private Sub DeleteCER_FOOD_SELECT_ATTACH(instance As CER_FOOD_SELECT_ATTACH)
    End Sub
  Partial Private Sub InsertCER_FOOD_WORD_OUT_PUT_TEMPLATE(instance As CER_FOOD_WORD_OUT_PUT_TEMPLATE)
    End Sub
  Partial Private Sub UpdateCER_FOOD_WORD_OUT_PUT_TEMPLATE(instance As CER_FOOD_WORD_OUT_PUT_TEMPLATE)
    End Sub
  Partial Private Sub DeleteCER_FOOD_WORD_OUT_PUT_TEMPLATE(instance As CER_FOOD_WORD_OUT_PUT_TEMPLATE)
    End Sub
  Partial Private Sub InsertCER_FOOD_MAS_FDTYPE_ENG(instance As CER_FOOD_MAS_FDTYPE_ENG)
    End Sub
  Partial Private Sub UpdateCER_FOOD_MAS_FDTYPE_ENG(instance As CER_FOOD_MAS_FDTYPE_ENG)
    End Sub
  Partial Private Sub DeleteCER_FOOD_MAS_FDTYPE_ENG(instance As CER_FOOD_MAS_FDTYPE_ENG)
    End Sub
  Partial Private Sub InsertCFS_FOOD_PRODUCT(instance As CFS_FOOD_PRODUCT)
    End Sub
  Partial Private Sub UpdateCFS_FOOD_PRODUCT(instance As CFS_FOOD_PRODUCT)
    End Sub
  Partial Private Sub DeleteCFS_FOOD_PRODUCT(instance As CFS_FOOD_PRODUCT)
    End Sub
  Partial Private Sub InsertCFS_FOOD_HEAD(instance As CFS_FOOD_HEAD)
    End Sub
  Partial Private Sub UpdateCFS_FOOD_HEAD(instance As CFS_FOOD_HEAD)
    End Sub
  Partial Private Sub DeleteCFS_FOOD_HEAD(instance As CFS_FOOD_HEAD)
    End Sub
  Partial Private Sub InsertCER_FOOD_WORK_LIMIT(instance As CER_FOOD_WORK_LIMIT)
    End Sub
  Partial Private Sub UpdateCER_FOOD_WORK_LIMIT(instance As CER_FOOD_WORK_LIMIT)
    End Sub
  Partial Private Sub DeleteCER_FOOD_WORK_LIMIT(instance As CER_FOOD_WORK_LIMIT)
    End Sub
  Partial Private Sub InsertCER_FOOD_WORK_SCHEDULE(instance As CER_FOOD_WORK_SCHEDULE)
    End Sub
  Partial Private Sub UpdateCER_FOOD_WORK_SCHEDULE(instance As CER_FOOD_WORK_SCHEDULE)
    End Sub
  Partial Private Sub DeleteCER_FOOD_WORK_SCHEDULE(instance As CER_FOOD_WORK_SCHEDULE)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("FDA_CFS_CENTERConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property GEN_RCV_NUMBERs() As System.Data.Linq.Table(Of GEN_RCV_NUMBER)
		Get
			Return Me.GetTable(Of GEN_RCV_NUMBER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROCESSes() As System.Data.Linq.Table(Of MAS_PROCESS)
		Get
			Return Me.GetTable(Of MAS_PROCESS)
		End Get
	End Property
	
	Public ReadOnly Property CFS_FOOD_COUNTRies() As System.Data.Linq.Table(Of CFS_FOOD_COUNTRY)
		Get
			Return Me.GetTable(Of CFS_FOOD_COUNTRY)
		End Get
	End Property
	
	Public ReadOnly Property CFS_FOOD_FMLs() As System.Data.Linq.Table(Of CFS_FOOD_FML)
		Get
			Return Me.GetTable(Of CFS_FOOD_FML)
		End Get
	End Property
	
	Public ReadOnly Property CER_FOOD_STAFFs() As System.Data.Linq.Table(Of CER_FOOD_STAFF)
		Get
			Return Me.GetTable(Of CER_FOOD_STAFF)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STAFF_TYPEs() As System.Data.Linq.Table(Of MAS_STAFF_TYPE)
		Get
			Return Me.GetTable(Of MAS_STAFF_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STATUS1s() As System.Data.Linq.Table(Of MAS_STATUS1)
		Get
			Return Me.GetTable(Of MAS_STATUS1)
		End Get
	End Property
	
	Public ReadOnly Property CFS_FOOD_STAFF_REMARK_VERSIONs() As System.Data.Linq.Table(Of CFS_FOOD_STAFF_REMARK_VERSION)
		Get
			Return Me.GetTable(Of CFS_FOOD_STAFF_REMARK_VERSION)
		End Get
	End Property
	
	Public ReadOnly Property CER_FOOD_SELECT_ATTACHes() As System.Data.Linq.Table(Of CER_FOOD_SELECT_ATTACH)
		Get
			Return Me.GetTable(Of CER_FOOD_SELECT_ATTACH)
		End Get
	End Property
	
	Public ReadOnly Property CER_FOOD_WORD_OUT_PUT_TEMPLATEs() As System.Data.Linq.Table(Of CER_FOOD_WORD_OUT_PUT_TEMPLATE)
		Get
			Return Me.GetTable(Of CER_FOOD_WORD_OUT_PUT_TEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property CER_FOOD_MAS_FDTYPE_ENGs() As System.Data.Linq.Table(Of CER_FOOD_MAS_FDTYPE_ENG)
		Get
			Return Me.GetTable(Of CER_FOOD_MAS_FDTYPE_ENG)
		End Get
	End Property
	
	Public ReadOnly Property CFS_FOOD_PRODUCTs() As System.Data.Linq.Table(Of CFS_FOOD_PRODUCT)
		Get
			Return Me.GetTable(Of CFS_FOOD_PRODUCT)
		End Get
	End Property
	
	Public ReadOnly Property CFS_FOOD_HEADs() As System.Data.Linq.Table(Of CFS_FOOD_HEAD)
		Get
			Return Me.GetTable(Of CFS_FOOD_HEAD)
		End Get
	End Property
	
	Public ReadOnly Property CER_FOOD_WORK_LIMITs() As System.Data.Linq.Table(Of CER_FOOD_WORK_LIMIT)
		Get
			Return Me.GetTable(Of CER_FOOD_WORK_LIMIT)
		End Get
	End Property
	
	Public ReadOnly Property CER_FOOD_WORK_SCHEDULEs() As System.Data.Linq.Table(Of CER_FOOD_WORK_SCHEDULE)
		Get
			Return Me.GetTable(Of CER_FOOD_WORK_SCHEDULE)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_RCV_NUMBER")>  _
Partial Public Class GEN_RCV_NUMBER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROCESS")>  _
Partial Public Class MAS_PROCESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As String
	
	Private _PROCESS_NAME As String
	
	Private _PROCESS_DESCRIPTION As String
	
	Private _GROUP_CER As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnGROUP_CERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_CERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="VarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_DESCRIPTION() As String
		Get
			Return Me._PROCESS_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._PROCESS_DESCRIPTION, value) = false) Then
				Me.OnPROCESS_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_DESCRIPTION = value
				Me.SendPropertyChanged("PROCESS_DESCRIPTION")
				Me.OnPROCESS_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_CER", DbType:="Int")>  _
	Public Property GROUP_CER() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_CER
		End Get
		Set
			If (Me._GROUP_CER.Equals(value) = false) Then
				Me.OnGROUP_CERChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_CER = value
				Me.SendPropertyChanged("GROUP_CER")
				Me.OnGROUP_CERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CFS_FOOD_COUNTRY")>  _
Partial Public Class CFS_FOOD_COUNTRY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA_CER_NO As Integer
	
	Private _COUNTRY_NAME_THA As String
	
	Private _COUNTRY_NAME_ENG As String
	
	Private _UNIT_CER As System.Nullable(Of Integer)
	
	Private _VALUE_EXPORT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_CER_NOChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_IDA_CER_NOChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_NAME_THAChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_NAME_THAChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_NAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_NAME_ENGChanged()
    End Sub
    Partial Private Sub OnUNIT_CERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUNIT_CERChanged()
    End Sub
    Partial Private Sub OnVALUE_EXPORTChanging(value As String)
    End Sub
    Partial Private Sub OnVALUE_EXPORTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_CER_NO", DbType:="Int NOT NULL")>  _
	Public Property FK_IDA_CER_NO() As Integer
		Get
			Return Me._FK_IDA_CER_NO
		End Get
		Set
			If ((Me._FK_IDA_CER_NO = value)  _
						= false) Then
				Me.OnFK_IDA_CER_NOChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_CER_NO = value
				Me.SendPropertyChanged("FK_IDA_CER_NO")
				Me.OnFK_IDA_CER_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_NAME_THA", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY_NAME_THA() As String
		Get
			Return Me._COUNTRY_NAME_THA
		End Get
		Set
			If (String.Equals(Me._COUNTRY_NAME_THA, value) = false) Then
				Me.OnCOUNTRY_NAME_THAChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_NAME_THA = value
				Me.SendPropertyChanged("COUNTRY_NAME_THA")
				Me.OnCOUNTRY_NAME_THAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY_NAME_ENG() As String
		Get
			Return Me._COUNTRY_NAME_ENG
		End Get
		Set
			If (String.Equals(Me._COUNTRY_NAME_ENG, value) = false) Then
				Me.OnCOUNTRY_NAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_NAME_ENG = value
				Me.SendPropertyChanged("COUNTRY_NAME_ENG")
				Me.OnCOUNTRY_NAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_CER", DbType:="Int")>  _
	Public Property UNIT_CER() As System.Nullable(Of Integer)
		Get
			Return Me._UNIT_CER
		End Get
		Set
			If (Me._UNIT_CER.Equals(value) = false) Then
				Me.OnUNIT_CERChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_CER = value
				Me.SendPropertyChanged("UNIT_CER")
				Me.OnUNIT_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VALUE_EXPORT", DbType:="NVarChar(50)")>  _
	Public Property VALUE_EXPORT() As String
		Get
			Return Me._VALUE_EXPORT
		End Get
		Set
			If (String.Equals(Me._VALUE_EXPORT, value) = false) Then
				Me.OnVALUE_EXPORTChanging(value)
				Me.SendPropertyChanging
				Me._VALUE_EXPORT = value
				Me.SendPropertyChanged("VALUE_EXPORT")
				Me.OnVALUE_EXPORTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CFS_FOOD_FML")>  _
Partial Public Class CFS_FOOD_FML
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA_PRODUCT As Integer
	
	Private _FML_NAME As String
	
	Private _FML_QTY As System.Nullable(Of Decimal)
	
	Private _FML_UNIT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_PRODUCTChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_IDA_PRODUCTChanged()
    End Sub
    Partial Private Sub OnFML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFML_NAMEChanged()
    End Sub
    Partial Private Sub OnFML_QTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFML_QTYChanged()
    End Sub
    Partial Private Sub OnFML_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnFML_UNITChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_PRODUCT", DbType:="Int NOT NULL")>  _
	Public Property FK_IDA_PRODUCT() As Integer
		Get
			Return Me._FK_IDA_PRODUCT
		End Get
		Set
			If ((Me._FK_IDA_PRODUCT = value)  _
						= false) Then
				Me.OnFK_IDA_PRODUCTChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_PRODUCT = value
				Me.SendPropertyChanged("FK_IDA_PRODUCT")
				Me.OnFK_IDA_PRODUCTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FML_NAME() As String
		Get
			Return Me._FML_NAME
		End Get
		Set
			If (String.Equals(Me._FML_NAME, value) = false) Then
				Me.OnFML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FML_NAME = value
				Me.SendPropertyChanged("FML_NAME")
				Me.OnFML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FML_QTY", DbType:="Decimal(18,6)")>  _
	Public Property FML_QTY() As System.Nullable(Of Decimal)
		Get
			Return Me._FML_QTY
		End Get
		Set
			If (Me._FML_QTY.Equals(value) = false) Then
				Me.OnFML_QTYChanging(value)
				Me.SendPropertyChanging
				Me._FML_QTY = value
				Me.SendPropertyChanged("FML_QTY")
				Me.OnFML_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FML_UNIT", DbType:="NVarChar(50)")>  _
	Public Property FML_UNIT() As String
		Get
			Return Me._FML_UNIT
		End Get
		Set
			If (String.Equals(Me._FML_UNIT, value) = false) Then
				Me.OnFML_UNITChanging(value)
				Me.SendPropertyChanging
				Me._FML_UNIT = value
				Me.SendPropertyChanged("FML_UNIT")
				Me.OnFML_UNITChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_FOOD_STAFF")>  _
Partial Public Class CER_FOOD_STAFF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STAFF_CITIZEN_ID As String
	
	Private _FK_STAFF_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTAFF_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnFK_STAFF_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_STAFF_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property STAFF_CITIZEN_ID() As String
		Get
			Return Me._STAFF_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._STAFF_CITIZEN_ID, value) = false) Then
				Me.OnSTAFF_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_CITIZEN_ID = value
				Me.SendPropertyChanged("STAFF_CITIZEN_ID")
				Me.OnSTAFF_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_TYPE", DbType:="Int")>  _
	Public Property FK_STAFF_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_STAFF_TYPE
		End Get
		Set
			If (Me._FK_STAFF_TYPE.Equals(value) = false) Then
				Me.OnFK_STAFF_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_TYPE = value
				Me.SendPropertyChanged("FK_STAFF_TYPE")
				Me.OnFK_STAFF_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STAFF_TYPE")>  _
Partial Public Class MAS_STAFF_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STAFF_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_NAME() As String
		Get
			Return Me._STAFF_NAME
		End Get
		Set
			If (String.Equals(Me._STAFF_NAME, value) = false) Then
				Me.OnSTAFF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_NAME = value
				Me.SendPropertyChanged("STAFF_NAME")
				Me.OnSTAFF_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STATUS")>  _
Partial Public Class MAS_STATUS1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_NAME As String
	
	Private _STATUS_GROUP As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP", DbType:="Int")>  _
	Public Property STATUS_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_GROUP
		End Get
		Set
			If (Me._STATUS_GROUP.Equals(value) = false) Then
				Me.OnSTATUS_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP = value
				Me.SendPropertyChanged("STATUS_GROUP")
				Me.OnSTATUS_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CFS_FOOD_STAFF_REMARK_VERSION")>  _
Partial Public Class CFS_FOOD_STAFF_REMARK_VERSION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _DATE_TIME As System.Nullable(Of Date)
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _STAFF_CITIZEN As String
	
	Private _STAFF_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnDATE_TIMEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_TIMEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnSTAFF_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_CITIZENChanged()
    End Sub
    Partial Private Sub OnSTAFF_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTAFF_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_TIME", DbType:="DateTime")>  _
	Public Property DATE_TIME() As System.Nullable(Of Date)
		Get
			Return Me._DATE_TIME
		End Get
		Set
			If (Me._DATE_TIME.Equals(value) = false) Then
				Me.OnDATE_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_TIME = value
				Me.SendPropertyChanged("DATE_TIME")
				Me.OnDATE_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_CITIZEN", DbType:="NVarChar(50)")>  _
	Public Property STAFF_CITIZEN() As String
		Get
			Return Me._STAFF_CITIZEN
		End Get
		Set
			If (String.Equals(Me._STAFF_CITIZEN, value) = false) Then
				Me.OnSTAFF_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_CITIZEN = value
				Me.SendPropertyChanged("STAFF_CITIZEN")
				Me.OnSTAFF_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_TYPE", DbType:="Int")>  _
	Public Property STAFF_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._STAFF_TYPE
		End Get
		Set
			If (Me._STAFF_TYPE.Equals(value) = false) Then
				Me.OnSTAFF_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_TYPE = value
				Me.SendPropertyChanged("STAFF_TYPE")
				Me.OnSTAFF_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_FOOD_SELECT_ATTACH")>  _
Partial Public Class CER_FOOD_SELECT_ATTACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA_HEAD As System.Nullable(Of Integer)
	
	Private _FK_IDA_TEMPLATE_ATTACH As System.Nullable(Of Integer)
	
	Private _ATTACH_NAME As String
	
	Private _ATTACH_PIORITY As System.Nullable(Of Integer)
	
	Private _ATTACH_STATUS As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_HEADChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDA_HEADChanged()
    End Sub
    Partial Private Sub OnFK_IDA_TEMPLATE_ATTACHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDA_TEMPLATE_ATTACHChanged()
    End Sub
    Partial Private Sub OnATTACH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH_NAMEChanged()
    End Sub
    Partial Private Sub OnATTACH_PIORITYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_PIORITYChanged()
    End Sub
    Partial Private Sub OnATTACH_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_STATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_HEAD", DbType:="Int")>  _
	Public Property FK_IDA_HEAD() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA_HEAD
		End Get
		Set
			If (Me._FK_IDA_HEAD.Equals(value) = false) Then
				Me.OnFK_IDA_HEADChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_HEAD = value
				Me.SendPropertyChanged("FK_IDA_HEAD")
				Me.OnFK_IDA_HEADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_TEMPLATE_ATTACH", DbType:="Int")>  _
	Public Property FK_IDA_TEMPLATE_ATTACH() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA_TEMPLATE_ATTACH
		End Get
		Set
			If (Me._FK_IDA_TEMPLATE_ATTACH.Equals(value) = false) Then
				Me.OnFK_IDA_TEMPLATE_ATTACHChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_TEMPLATE_ATTACH = value
				Me.SendPropertyChanged("FK_IDA_TEMPLATE_ATTACH")
				Me.OnFK_IDA_TEMPLATE_ATTACHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ATTACH_NAME() As String
		Get
			Return Me._ATTACH_NAME
		End Get
		Set
			If (String.Equals(Me._ATTACH_NAME, value) = false) Then
				Me.OnATTACH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_NAME = value
				Me.SendPropertyChanged("ATTACH_NAME")
				Me.OnATTACH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_PIORITY", DbType:="Int")>  _
	Public Property ATTACH_PIORITY() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_PIORITY
		End Get
		Set
			If (Me._ATTACH_PIORITY.Equals(value) = false) Then
				Me.OnATTACH_PIORITYChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_PIORITY = value
				Me.SendPropertyChanged("ATTACH_PIORITY")
				Me.OnATTACH_PIORITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_STATUS", DbType:="Int")>  _
	Public Property ATTACH_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_STATUS
		End Get
		Set
			If (Me._ATTACH_STATUS.Equals(value) = false) Then
				Me.OnATTACH_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_STATUS = value
				Me.SendPropertyChanged("ATTACH_STATUS")
				Me.OnATTACH_STATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_FOOD_WORD_OUT_PUT_TEMPLATE")>  _
Partial Public Class CER_FOOD_WORD_OUT_PUT_TEMPLATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TYPE As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _FFILE_NAME As String
	
	Private _CASE_CER As System.Nullable(Of Integer)
	
	Private _DESCRIPTION As String
	
	Private _TYPE_NAME As String
	
	Private _CASE_CER_NAME As String
	
	Private _GMP As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFFILE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFFILE_NAMEChanged()
    End Sub
    Partial Private Sub OnCASE_CERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCASE_CERChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnCASE_CER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCASE_CER_NAMEChanged()
    End Sub
    Partial Private Sub OnGMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGMPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="Int")>  _
	Public Property TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE
		End Get
		Set
			If (Me._TYPE.Equals(value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FFILE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FFILE_NAME() As String
		Get
			Return Me._FFILE_NAME
		End Get
		Set
			If (String.Equals(Me._FFILE_NAME, value) = false) Then
				Me.OnFFILE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FFILE_NAME = value
				Me.SendPropertyChanged("FFILE_NAME")
				Me.OnFFILE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CASE_CER", DbType:="Int")>  _
	Public Property CASE_CER() As System.Nullable(Of Integer)
		Get
			Return Me._CASE_CER
		End Get
		Set
			If (Me._CASE_CER.Equals(value) = false) Then
				Me.OnCASE_CERChanging(value)
				Me.SendPropertyChanging
				Me._CASE_CER = value
				Me.SendPropertyChanged("CASE_CER")
				Me.OnCASE_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_NAME", DbType:="NVarChar(50)")>  _
	Public Property TYPE_NAME() As String
		Get
			Return Me._TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_NAME, value) = false) Then
				Me.OnTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_NAME = value
				Me.SendPropertyChanged("TYPE_NAME")
				Me.OnTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CASE_CER_NAME", DbType:="NVarChar(50)")>  _
	Public Property CASE_CER_NAME() As String
		Get
			Return Me._CASE_CER_NAME
		End Get
		Set
			If (String.Equals(Me._CASE_CER_NAME, value) = false) Then
				Me.OnCASE_CER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CASE_CER_NAME = value
				Me.SendPropertyChanged("CASE_CER_NAME")
				Me.OnCASE_CER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GMP", DbType:="Int")>  _
	Public Property GMP() As System.Nullable(Of Integer)
		Get
			Return Me._GMP
		End Get
		Set
			If (Me._GMP.Equals(value) = false) Then
				Me.OnGMPChanging(value)
				Me.SendPropertyChanging
				Me._GMP = value
				Me.SendPropertyChanged("GMP")
				Me.OnGMPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_FOOD_MAS_FDTYPE_ENG")>  _
Partial Public Class CER_FOOD_MAS_FDTYPE_ENG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _fdtypenm As String
	
	Private _engnm As String
	
	Private _fdtypecd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnfdtypenmChanging(value As String)
    End Sub
    Partial Private Sub OnfdtypenmChanged()
    End Sub
    Partial Private Sub OnengnmChanging(value As String)
    End Sub
    Partial Private Sub OnengnmChanged()
    End Sub
    Partial Private Sub OnfdtypecdChanging(value As String)
    End Sub
    Partial Private Sub OnfdtypecdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdtypenm", DbType:="NVarChar(MAX)")>  _
	Public Property fdtypenm() As String
		Get
			Return Me._fdtypenm
		End Get
		Set
			If (String.Equals(Me._fdtypenm, value) = false) Then
				Me.OnfdtypenmChanging(value)
				Me.SendPropertyChanging
				Me._fdtypenm = value
				Me.SendPropertyChanged("fdtypenm")
				Me.OnfdtypenmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnm", DbType:="NVarChar(MAX)")>  _
	Public Property engnm() As String
		Get
			Return Me._engnm
		End Get
		Set
			If (String.Equals(Me._engnm, value) = false) Then
				Me.OnengnmChanging(value)
				Me.SendPropertyChanging
				Me._engnm = value
				Me.SendPropertyChanged("engnm")
				Me.OnengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdtypecd", DbType:="NChar(10)")>  _
	Public Property fdtypecd() As String
		Get
			Return Me._fdtypecd
		End Get
		Set
			If (String.Equals(Me._fdtypecd, value) = false) Then
				Me.OnfdtypecdChanging(value)
				Me.SendPropertyChanging
				Me._fdtypecd = value
				Me.SendPropertyChanged("fdtypecd")
				Me.OnfdtypecdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CFS_FOOD_PRODUCT")>  _
Partial Public Class CFS_FOOD_PRODUCT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA_CER_NO As Integer
	
	Private _PRODUCT_MAIN_THA As String
	
	Private _PRODUCT_MAIN_ENG As String
	
	Private _PRODUCT_THA As String
	
	Private _PRODUCT_ENG As String
	
	Private _NEW_CODE As String
	
	Private _REGNOS As String
	
	Private _PRODUCT_SET_OUTPUT As String
	
	Private _NAME_EXPORT As String
	
	Private _EXPORT_ONLY As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_CER_NOChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_IDA_CER_NOChanged()
    End Sub
    Partial Private Sub OnPRODUCT_MAIN_THAChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_MAIN_THAChanged()
    End Sub
    Partial Private Sub OnPRODUCT_MAIN_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_MAIN_ENGChanged()
    End Sub
    Partial Private Sub OnPRODUCT_THAChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_THAChanged()
    End Sub
    Partial Private Sub OnPRODUCT_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_ENGChanged()
    End Sub
    Partial Private Sub OnNEW_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_CODEChanged()
    End Sub
    Partial Private Sub OnREGNOSChanging(value As String)
    End Sub
    Partial Private Sub OnREGNOSChanged()
    End Sub
    Partial Private Sub OnPRODUCT_SET_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_SET_OUTPUTChanged()
    End Sub
    Partial Private Sub OnNAME_EXPORTChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_EXPORTChanged()
    End Sub
    Partial Private Sub OnEXPORT_ONLYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXPORT_ONLYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_CER_NO", DbType:="Int NOT NULL")>  _
	Public Property FK_IDA_CER_NO() As Integer
		Get
			Return Me._FK_IDA_CER_NO
		End Get
		Set
			If ((Me._FK_IDA_CER_NO = value)  _
						= false) Then
				Me.OnFK_IDA_CER_NOChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_CER_NO = value
				Me.SendPropertyChanged("FK_IDA_CER_NO")
				Me.OnFK_IDA_CER_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_MAIN_THA", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_MAIN_THA() As String
		Get
			Return Me._PRODUCT_MAIN_THA
		End Get
		Set
			If (String.Equals(Me._PRODUCT_MAIN_THA, value) = false) Then
				Me.OnPRODUCT_MAIN_THAChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_MAIN_THA = value
				Me.SendPropertyChanged("PRODUCT_MAIN_THA")
				Me.OnPRODUCT_MAIN_THAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_MAIN_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_MAIN_ENG() As String
		Get
			Return Me._PRODUCT_MAIN_ENG
		End Get
		Set
			If (String.Equals(Me._PRODUCT_MAIN_ENG, value) = false) Then
				Me.OnPRODUCT_MAIN_ENGChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_MAIN_ENG = value
				Me.SendPropertyChanged("PRODUCT_MAIN_ENG")
				Me.OnPRODUCT_MAIN_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_THA", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_THA() As String
		Get
			Return Me._PRODUCT_THA
		End Get
		Set
			If (String.Equals(Me._PRODUCT_THA, value) = false) Then
				Me.OnPRODUCT_THAChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_THA = value
				Me.SendPropertyChanged("PRODUCT_THA")
				Me.OnPRODUCT_THAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_ENG() As String
		Get
			Return Me._PRODUCT_ENG
		End Get
		Set
			If (String.Equals(Me._PRODUCT_ENG, value) = false) Then
				Me.OnPRODUCT_ENGChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_ENG = value
				Me.SendPropertyChanged("PRODUCT_ENG")
				Me.OnPRODUCT_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_CODE() As String
		Get
			Return Me._NEW_CODE
		End Get
		Set
			If (String.Equals(Me._NEW_CODE, value) = false) Then
				Me.OnNEW_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NEW_CODE = value
				Me.SendPropertyChanged("NEW_CODE")
				Me.OnNEW_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGNOS", DbType:="NVarChar(MAX)")>  _
	Public Property REGNOS() As String
		Get
			Return Me._REGNOS
		End Get
		Set
			If (String.Equals(Me._REGNOS, value) = false) Then
				Me.OnREGNOSChanging(value)
				Me.SendPropertyChanging
				Me._REGNOS = value
				Me.SendPropertyChanged("REGNOS")
				Me.OnREGNOSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_SET_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_SET_OUTPUT() As String
		Get
			Return Me._PRODUCT_SET_OUTPUT
		End Get
		Set
			If (String.Equals(Me._PRODUCT_SET_OUTPUT, value) = false) Then
				Me.OnPRODUCT_SET_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_SET_OUTPUT = value
				Me.SendPropertyChanged("PRODUCT_SET_OUTPUT")
				Me.OnPRODUCT_SET_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_EXPORT", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_EXPORT() As String
		Get
			Return Me._NAME_EXPORT
		End Get
		Set
			If (String.Equals(Me._NAME_EXPORT, value) = false) Then
				Me.OnNAME_EXPORTChanging(value)
				Me.SendPropertyChanging
				Me._NAME_EXPORT = value
				Me.SendPropertyChanged("NAME_EXPORT")
				Me.OnNAME_EXPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPORT_ONLY", DbType:="Int")>  _
	Public Property EXPORT_ONLY() As System.Nullable(Of Integer)
		Get
			Return Me._EXPORT_ONLY
		End Get
		Set
			If (Me._EXPORT_ONLY.Equals(value) = false) Then
				Me.OnEXPORT_ONLYChanging(value)
				Me.SendPropertyChanging
				Me._EXPORT_ONLY = value
				Me.SendPropertyChanged("EXPORT_ONLY")
				Me.OnEXPORT_ONLYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CFS_FOOD_HEAD")>  _
Partial Public Class CFS_FOOD_HEAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _RCVNO As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _CFS_TYPE As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _COUNTRY As String
	
	Private _CITIZEN_UPLOAD As String
	
	Private _CITIZEN_DOWNLOAD As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _LCNSID As System.Nullable(Of Integer)
	
	Private _XML_NAME As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _DOWN_ID As System.Nullable(Of Integer)
	
	Private _CFS_ADDRESS As String
	
	Private _CFS_COUNT As System.Nullable(Of Integer)
	
	Private _CFS_ADDRESS1 As String
	
	Private _FK_PROCESS_ID As String
	
	Private _REF_CODE As String
	
	Private _ATTACH_1 As System.Nullable(Of Integer)
	
	Private _ATTACH_2 As System.Nullable(Of Integer)
	
	Private _ATTACH_3 As System.Nullable(Of Integer)
	
	Private _ATTACH_4 As System.Nullable(Of Integer)
	
	Private _ATTACH_5 As System.Nullable(Of Integer)
	
	Private _ATTACH_6 As System.Nullable(Of Integer)
	
	Private _CMT_UNIT As System.Nullable(Of Integer)
	
	Private _CFS_ADDRESS_SALE1 As String
	
	Private _CFS_ADDRESS_SALE2 As String
	
	Private _CFS_COMMENT_ADMIN As String
	
	Private _CFS_COMMENT_BUSINESS As String
	
	Private _UNTIL_DATE As System.Nullable(Of Date)
	
	Private _CITIZEN_APPROVED As String
	
	Private _STATUS_PRINT As String
	
	Private _CITIZEN_PRINT As String
	
	Private _CFS_EDIT_ADDRESS_OUTPUT As String
	
	Private _CFS_EDIT_ADDRESS1_OUTPUT As String
	
	Private _CFS_EDIT_ADDRESS_SALE1_OUTPUT As String
	
	Private _CFS_EDIT_ADDRESS_SALE2_OUTPUT As String
	
	Private _SYSTEM_GROUP As String
	
	Private _DATE_LAST_PRINT As System.Nullable(Of Date)
	
	Private _APPROVE_DATE As System.Nullable(Of Date)
	
	Private _FULL_THANM As String
	
	Private _CFS_EDIT_TOPIC_OUTPUT_1 As String
	
	Private _CFS_EDIT_TOPIC_OUTPUT_2 As String
	
	Private _LAST_MODIFLY_DATE As System.Nullable(Of Date)
	
	Private _PAUSE_TIME As System.Nullable(Of Date)
	
	Private _COMMENT_ADMIN As String
	
	Private _ATTACH_7 As System.Nullable(Of Integer)
	
	Private _ATTACH_8 As System.Nullable(Of Integer)
	
	Private _EXPORT_ONLY As String
	
	Private _ATTACH_9 As System.Nullable(Of Integer)
	
	Private _ATTACH_10 As System.Nullable(Of Integer)
	
	Private _LCNTYPECD As System.Nullable(Of Integer)
	
	Private _LCNNO As String
	
	Private _STAFF_CITIZEN_ID As String
	
	Private _SENIOR_STAFF_CITIZEN_ID As String
	
	Private _MASTER_CITIZEN_ID As String
	
	Private _ATTRIBUTE As String
	
	Private _PACKING As String
	
	Private _PURPOSE As String
	
	Private _OBJECTIVE As String
	
	Private _DISTRINCE As String
	
	Private _PROVINCE As String
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _CERTIFIES_CHECK1 As System.Nullable(Of Integer)
	
	Private _CERTIFIES_CHECK2 As System.Nullable(Of Integer)
	
	Private _CONTAIN As String
	
	Private _FINISH_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnCFS_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCFS_TYPEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_DOWNLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_DOWNLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnXML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_NAMEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnDOWN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWN_IDChanged()
    End Sub
    Partial Private Sub OnCFS_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnCFS_ADDRESSChanged()
    End Sub
    Partial Private Sub OnCFS_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCFS_COUNTChanged()
    End Sub
    Partial Private Sub OnCFS_ADDRESS1Changing(value As String)
    End Sub
    Partial Private Sub OnCFS_ADDRESS1Changed()
    End Sub
    Partial Private Sub OnFK_PROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnFK_PROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREF_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREF_CODEChanged()
    End Sub
    Partial Private Sub OnATTACH_1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_1Changed()
    End Sub
    Partial Private Sub OnATTACH_2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_2Changed()
    End Sub
    Partial Private Sub OnATTACH_3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_3Changed()
    End Sub
    Partial Private Sub OnATTACH_4Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_4Changed()
    End Sub
    Partial Private Sub OnATTACH_5Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_5Changed()
    End Sub
    Partial Private Sub OnATTACH_6Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_6Changed()
    End Sub
    Partial Private Sub OnCMT_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCMT_UNITChanged()
    End Sub
    Partial Private Sub OnCFS_ADDRESS_SALE1Changing(value As String)
    End Sub
    Partial Private Sub OnCFS_ADDRESS_SALE1Changed()
    End Sub
    Partial Private Sub OnCFS_ADDRESS_SALE2Changing(value As String)
    End Sub
    Partial Private Sub OnCFS_ADDRESS_SALE2Changed()
    End Sub
    Partial Private Sub OnCFS_COMMENT_ADMINChanging(value As String)
    End Sub
    Partial Private Sub OnCFS_COMMENT_ADMINChanged()
    End Sub
    Partial Private Sub OnCFS_COMMENT_BUSINESSChanging(value As String)
    End Sub
    Partial Private Sub OnCFS_COMMENT_BUSINESSChanged()
    End Sub
    Partial Private Sub OnUNTIL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUNTIL_DATEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_APPROVEDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_APPROVEDChanged()
    End Sub
    Partial Private Sub OnSTATUS_PRINTChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_PRINTChanged()
    End Sub
    Partial Private Sub OnCITIZEN_PRINTChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_PRINTChanged()
    End Sub
    Partial Private Sub OnCFS_EDIT_ADDRESS_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnCFS_EDIT_ADDRESS_OUTPUTChanged()
    End Sub
    Partial Private Sub OnCFS_EDIT_ADDRESS1_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnCFS_EDIT_ADDRESS1_OUTPUTChanged()
    End Sub
    Partial Private Sub OnCFS_EDIT_ADDRESS_SALE1_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnCFS_EDIT_ADDRESS_SALE1_OUTPUTChanged()
    End Sub
    Partial Private Sub OnCFS_EDIT_ADDRESS_SALE2_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnCFS_EDIT_ADDRESS_SALE2_OUTPUTChanged()
    End Sub
    Partial Private Sub OnSYSTEM_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnSYSTEM_GROUPChanged()
    End Sub
    Partial Private Sub OnDATE_LAST_PRINTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_LAST_PRINTChanged()
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnFULL_THANMChanging(value As String)
    End Sub
    Partial Private Sub OnFULL_THANMChanged()
    End Sub
    Partial Private Sub OnCFS_EDIT_TOPIC_OUTPUT_1Changing(value As String)
    End Sub
    Partial Private Sub OnCFS_EDIT_TOPIC_OUTPUT_1Changed()
    End Sub
    Partial Private Sub OnCFS_EDIT_TOPIC_OUTPUT_2Changing(value As String)
    End Sub
    Partial Private Sub OnCFS_EDIT_TOPIC_OUTPUT_2Changed()
    End Sub
    Partial Private Sub OnLAST_MODIFLY_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAST_MODIFLY_DATEChanged()
    End Sub
    Partial Private Sub OnPAUSE_TIMEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPAUSE_TIMEChanged()
    End Sub
    Partial Private Sub OnCOMMENT_ADMINChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENT_ADMINChanged()
    End Sub
    Partial Private Sub OnATTACH_7Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_7Changed()
    End Sub
    Partial Private Sub OnATTACH_8Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_8Changed()
    End Sub
    Partial Private Sub OnEXPORT_ONLYChanging(value As String)
    End Sub
    Partial Private Sub OnEXPORT_ONLYChanged()
    End Sub
    Partial Private Sub OnATTACH_9Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_9Changed()
    End Sub
    Partial Private Sub OnATTACH_10Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_10Changed()
    End Sub
    Partial Private Sub OnLCNTYPECDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNTYPECDChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnSTAFF_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnSENIOR_STAFF_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSENIOR_STAFF_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnMASTER_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnMASTER_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnATTRIBUTEChanging(value As String)
    End Sub
    Partial Private Sub OnATTRIBUTEChanged()
    End Sub
    Partial Private Sub OnPACKINGChanging(value As String)
    End Sub
    Partial Private Sub OnPACKINGChanged()
    End Sub
    Partial Private Sub OnPURPOSEChanging(value As String)
    End Sub
    Partial Private Sub OnPURPOSEChanged()
    End Sub
    Partial Private Sub OnOBJECTIVEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJECTIVEChanged()
    End Sub
    Partial Private Sub OnDISTRINCEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRINCEChanged()
    End Sub
    Partial Private Sub OnPROVINCEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVINCEChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnCERTIFIES_CHECK1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCERTIFIES_CHECK1Changed()
    End Sub
    Partial Private Sub OnCERTIFIES_CHECK2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCERTIFIES_CHECK2Changed()
    End Sub
    Partial Private Sub OnCONTAINChanging(value As String)
    End Sub
    Partial Private Sub OnCONTAINChanged()
    End Sub
    Partial Private Sub OnFINISH_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFINISH_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(50)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_TYPE", DbType:="VarChar(50)")>  _
	Public Property CFS_TYPE() As String
		Get
			Return Me._CFS_TYPE
		End Get
		Set
			If (String.Equals(Me._CFS_TYPE, value) = false) Then
				Me.OnCFS_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CFS_TYPE = value
				Me.SendPropertyChanged("CFS_TYPE")
				Me.OnCFS_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(50)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_UPLOAD", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_UPLOAD() As String
		Get
			Return Me._CITIZEN_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_UPLOAD, value) = false) Then
				Me.OnCITIZEN_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_UPLOAD")
				Me.OnCITIZEN_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_DOWNLOAD", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_DOWNLOAD() As String
		Get
			Return Me._CITIZEN_DOWNLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_DOWNLOAD, value) = false) Then
				Me.OnCITIZEN_DOWNLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_DOWNLOAD = value
				Me.SendPropertyChanged("CITIZEN_DOWNLOAD")
				Me.OnCITIZEN_DOWNLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="Int")>  _
	Public Property LCNSID() As System.Nullable(Of Integer)
		Get
			Return Me._LCNSID
		End Get
		Set
			If (Me._LCNSID.Equals(value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_NAME", DbType:="NVarChar(50)")>  _
	Public Property XML_NAME() As String
		Get
			Return Me._XML_NAME
		End Get
		Set
			If (String.Equals(Me._XML_NAME, value) = false) Then
				Me.OnXML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._XML_NAME = value
				Me.SendPropertyChanged("XML_NAME")
				Me.OnXML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWN_ID", DbType:="Int")>  _
	Public Property DOWN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWN_ID
		End Get
		Set
			If (Me._DOWN_ID.Equals(value) = false) Then
				Me.OnDOWN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWN_ID = value
				Me.SendPropertyChanged("DOWN_ID")
				Me.OnDOWN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_ADDRESS() As String
		Get
			Return Me._CFS_ADDRESS
		End Get
		Set
			If (String.Equals(Me._CFS_ADDRESS, value) = false) Then
				Me.OnCFS_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._CFS_ADDRESS = value
				Me.SendPropertyChanged("CFS_ADDRESS")
				Me.OnCFS_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_COUNT", DbType:="Int")>  _
	Public Property CFS_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._CFS_COUNT
		End Get
		Set
			If (Me._CFS_COUNT.Equals(value) = false) Then
				Me.OnCFS_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._CFS_COUNT = value
				Me.SendPropertyChanged("CFS_COUNT")
				Me.OnCFS_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_ADDRESS1", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_ADDRESS1() As String
		Get
			Return Me._CFS_ADDRESS1
		End Get
		Set
			If (String.Equals(Me._CFS_ADDRESS1, value) = false) Then
				Me.OnCFS_ADDRESS1Changing(value)
				Me.SendPropertyChanging
				Me._CFS_ADDRESS1 = value
				Me.SendPropertyChanged("CFS_ADDRESS1")
				Me.OnCFS_ADDRESS1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PROCESS_ID", DbType:="VarChar(50)")>  _
	Public Property FK_PROCESS_ID() As String
		Get
			Return Me._FK_PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._FK_PROCESS_ID, value) = false) Then
				Me.OnFK_PROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_PROCESS_ID = value
				Me.SendPropertyChanged("FK_PROCESS_ID")
				Me.OnFK_PROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property REF_CODE() As String
		Get
			Return Me._REF_CODE
		End Get
		Set
			If (String.Equals(Me._REF_CODE, value) = false) Then
				Me.OnREF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REF_CODE = value
				Me.SendPropertyChanged("REF_CODE")
				Me.OnREF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_1", DbType:="Int")>  _
	Public Property ATTACH_1() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_1
		End Get
		Set
			If (Me._ATTACH_1.Equals(value) = false) Then
				Me.OnATTACH_1Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_1 = value
				Me.SendPropertyChanged("ATTACH_1")
				Me.OnATTACH_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_2", DbType:="Int")>  _
	Public Property ATTACH_2() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_2
		End Get
		Set
			If (Me._ATTACH_2.Equals(value) = false) Then
				Me.OnATTACH_2Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_2 = value
				Me.SendPropertyChanged("ATTACH_2")
				Me.OnATTACH_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_3", DbType:="Int")>  _
	Public Property ATTACH_3() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_3
		End Get
		Set
			If (Me._ATTACH_3.Equals(value) = false) Then
				Me.OnATTACH_3Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_3 = value
				Me.SendPropertyChanged("ATTACH_3")
				Me.OnATTACH_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_4", DbType:="Int")>  _
	Public Property ATTACH_4() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_4
		End Get
		Set
			If (Me._ATTACH_4.Equals(value) = false) Then
				Me.OnATTACH_4Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_4 = value
				Me.SendPropertyChanged("ATTACH_4")
				Me.OnATTACH_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_5", DbType:="Int")>  _
	Public Property ATTACH_5() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_5
		End Get
		Set
			If (Me._ATTACH_5.Equals(value) = false) Then
				Me.OnATTACH_5Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_5 = value
				Me.SendPropertyChanged("ATTACH_5")
				Me.OnATTACH_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_6", DbType:="Int")>  _
	Public Property ATTACH_6() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_6
		End Get
		Set
			If (Me._ATTACH_6.Equals(value) = false) Then
				Me.OnATTACH_6Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_6 = value
				Me.SendPropertyChanged("ATTACH_6")
				Me.OnATTACH_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMT_UNIT", DbType:="Int")>  _
	Public Property CMT_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._CMT_UNIT
		End Get
		Set
			If (Me._CMT_UNIT.Equals(value) = false) Then
				Me.OnCMT_UNITChanging(value)
				Me.SendPropertyChanging
				Me._CMT_UNIT = value
				Me.SendPropertyChanged("CMT_UNIT")
				Me.OnCMT_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_ADDRESS_SALE1", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_ADDRESS_SALE1() As String
		Get
			Return Me._CFS_ADDRESS_SALE1
		End Get
		Set
			If (String.Equals(Me._CFS_ADDRESS_SALE1, value) = false) Then
				Me.OnCFS_ADDRESS_SALE1Changing(value)
				Me.SendPropertyChanging
				Me._CFS_ADDRESS_SALE1 = value
				Me.SendPropertyChanged("CFS_ADDRESS_SALE1")
				Me.OnCFS_ADDRESS_SALE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_ADDRESS_SALE2", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_ADDRESS_SALE2() As String
		Get
			Return Me._CFS_ADDRESS_SALE2
		End Get
		Set
			If (String.Equals(Me._CFS_ADDRESS_SALE2, value) = false) Then
				Me.OnCFS_ADDRESS_SALE2Changing(value)
				Me.SendPropertyChanging
				Me._CFS_ADDRESS_SALE2 = value
				Me.SendPropertyChanged("CFS_ADDRESS_SALE2")
				Me.OnCFS_ADDRESS_SALE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_COMMENT_ADMIN", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_COMMENT_ADMIN() As String
		Get
			Return Me._CFS_COMMENT_ADMIN
		End Get
		Set
			If (String.Equals(Me._CFS_COMMENT_ADMIN, value) = false) Then
				Me.OnCFS_COMMENT_ADMINChanging(value)
				Me.SendPropertyChanging
				Me._CFS_COMMENT_ADMIN = value
				Me.SendPropertyChanged("CFS_COMMENT_ADMIN")
				Me.OnCFS_COMMENT_ADMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_COMMENT_BUSINESS", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_COMMENT_BUSINESS() As String
		Get
			Return Me._CFS_COMMENT_BUSINESS
		End Get
		Set
			If (String.Equals(Me._CFS_COMMENT_BUSINESS, value) = false) Then
				Me.OnCFS_COMMENT_BUSINESSChanging(value)
				Me.SendPropertyChanging
				Me._CFS_COMMENT_BUSINESS = value
				Me.SendPropertyChanged("CFS_COMMENT_BUSINESS")
				Me.OnCFS_COMMENT_BUSINESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNTIL_DATE", DbType:="DateTime")>  _
	Public Property UNTIL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UNTIL_DATE
		End Get
		Set
			If (Me._UNTIL_DATE.Equals(value) = false) Then
				Me.OnUNTIL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UNTIL_DATE = value
				Me.SendPropertyChanged("UNTIL_DATE")
				Me.OnUNTIL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_APPROVED", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_APPROVED() As String
		Get
			Return Me._CITIZEN_APPROVED
		End Get
		Set
			If (String.Equals(Me._CITIZEN_APPROVED, value) = false) Then
				Me.OnCITIZEN_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_APPROVED = value
				Me.SendPropertyChanged("CITIZEN_APPROVED")
				Me.OnCITIZEN_APPROVEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_PRINT", DbType:="NChar(10)")>  _
	Public Property STATUS_PRINT() As String
		Get
			Return Me._STATUS_PRINT
		End Get
		Set
			If (String.Equals(Me._STATUS_PRINT, value) = false) Then
				Me.OnSTATUS_PRINTChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_PRINT = value
				Me.SendPropertyChanged("STATUS_PRINT")
				Me.OnSTATUS_PRINTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_PRINT", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_PRINT() As String
		Get
			Return Me._CITIZEN_PRINT
		End Get
		Set
			If (String.Equals(Me._CITIZEN_PRINT, value) = false) Then
				Me.OnCITIZEN_PRINTChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_PRINT = value
				Me.SendPropertyChanged("CITIZEN_PRINT")
				Me.OnCITIZEN_PRINTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_EDIT_ADDRESS_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_EDIT_ADDRESS_OUTPUT() As String
		Get
			Return Me._CFS_EDIT_ADDRESS_OUTPUT
		End Get
		Set
			If (String.Equals(Me._CFS_EDIT_ADDRESS_OUTPUT, value) = false) Then
				Me.OnCFS_EDIT_ADDRESS_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._CFS_EDIT_ADDRESS_OUTPUT = value
				Me.SendPropertyChanged("CFS_EDIT_ADDRESS_OUTPUT")
				Me.OnCFS_EDIT_ADDRESS_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_EDIT_ADDRESS1_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_EDIT_ADDRESS1_OUTPUT() As String
		Get
			Return Me._CFS_EDIT_ADDRESS1_OUTPUT
		End Get
		Set
			If (String.Equals(Me._CFS_EDIT_ADDRESS1_OUTPUT, value) = false) Then
				Me.OnCFS_EDIT_ADDRESS1_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._CFS_EDIT_ADDRESS1_OUTPUT = value
				Me.SendPropertyChanged("CFS_EDIT_ADDRESS1_OUTPUT")
				Me.OnCFS_EDIT_ADDRESS1_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_EDIT_ADDRESS_SALE1_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_EDIT_ADDRESS_SALE1_OUTPUT() As String
		Get
			Return Me._CFS_EDIT_ADDRESS_SALE1_OUTPUT
		End Get
		Set
			If (String.Equals(Me._CFS_EDIT_ADDRESS_SALE1_OUTPUT, value) = false) Then
				Me.OnCFS_EDIT_ADDRESS_SALE1_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._CFS_EDIT_ADDRESS_SALE1_OUTPUT = value
				Me.SendPropertyChanged("CFS_EDIT_ADDRESS_SALE1_OUTPUT")
				Me.OnCFS_EDIT_ADDRESS_SALE1_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_EDIT_ADDRESS_SALE2_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_EDIT_ADDRESS_SALE2_OUTPUT() As String
		Get
			Return Me._CFS_EDIT_ADDRESS_SALE2_OUTPUT
		End Get
		Set
			If (String.Equals(Me._CFS_EDIT_ADDRESS_SALE2_OUTPUT, value) = false) Then
				Me.OnCFS_EDIT_ADDRESS_SALE2_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._CFS_EDIT_ADDRESS_SALE2_OUTPUT = value
				Me.SendPropertyChanged("CFS_EDIT_ADDRESS_SALE2_OUTPUT")
				Me.OnCFS_EDIT_ADDRESS_SALE2_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_GROUP", DbType:="NChar(10)")>  _
	Public Property SYSTEM_GROUP() As String
		Get
			Return Me._SYSTEM_GROUP
		End Get
		Set
			If (String.Equals(Me._SYSTEM_GROUP, value) = false) Then
				Me.OnSYSTEM_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_GROUP = value
				Me.SendPropertyChanged("SYSTEM_GROUP")
				Me.OnSYSTEM_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_LAST_PRINT", DbType:="DateTime")>  _
	Public Property DATE_LAST_PRINT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_LAST_PRINT
		End Get
		Set
			If (Me._DATE_LAST_PRINT.Equals(value) = false) Then
				Me.OnDATE_LAST_PRINTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_LAST_PRINT = value
				Me.SendPropertyChanged("DATE_LAST_PRINT")
				Me.OnDATE_LAST_PRINTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPROVE_DATE
		End Get
		Set
			If (Me._APPROVE_DATE.Equals(value) = false) Then
				Me.OnAPPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_DATE = value
				Me.SendPropertyChanged("APPROVE_DATE")
				Me.OnAPPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULL_THANM", DbType:="NVarChar(MAX)")>  _
	Public Property FULL_THANM() As String
		Get
			Return Me._FULL_THANM
		End Get
		Set
			If (String.Equals(Me._FULL_THANM, value) = false) Then
				Me.OnFULL_THANMChanging(value)
				Me.SendPropertyChanging
				Me._FULL_THANM = value
				Me.SendPropertyChanged("FULL_THANM")
				Me.OnFULL_THANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_EDIT_TOPIC_OUTPUT_1", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_EDIT_TOPIC_OUTPUT_1() As String
		Get
			Return Me._CFS_EDIT_TOPIC_OUTPUT_1
		End Get
		Set
			If (String.Equals(Me._CFS_EDIT_TOPIC_OUTPUT_1, value) = false) Then
				Me.OnCFS_EDIT_TOPIC_OUTPUT_1Changing(value)
				Me.SendPropertyChanging
				Me._CFS_EDIT_TOPIC_OUTPUT_1 = value
				Me.SendPropertyChanged("CFS_EDIT_TOPIC_OUTPUT_1")
				Me.OnCFS_EDIT_TOPIC_OUTPUT_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CFS_EDIT_TOPIC_OUTPUT_2", DbType:="NVarChar(MAX)")>  _
	Public Property CFS_EDIT_TOPIC_OUTPUT_2() As String
		Get
			Return Me._CFS_EDIT_TOPIC_OUTPUT_2
		End Get
		Set
			If (String.Equals(Me._CFS_EDIT_TOPIC_OUTPUT_2, value) = false) Then
				Me.OnCFS_EDIT_TOPIC_OUTPUT_2Changing(value)
				Me.SendPropertyChanging
				Me._CFS_EDIT_TOPIC_OUTPUT_2 = value
				Me.SendPropertyChanged("CFS_EDIT_TOPIC_OUTPUT_2")
				Me.OnCFS_EDIT_TOPIC_OUTPUT_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_MODIFLY_DATE", DbType:="DateTime")>  _
	Public Property LAST_MODIFLY_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAST_MODIFLY_DATE
		End Get
		Set
			If (Me._LAST_MODIFLY_DATE.Equals(value) = false) Then
				Me.OnLAST_MODIFLY_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_MODIFLY_DATE = value
				Me.SendPropertyChanged("LAST_MODIFLY_DATE")
				Me.OnLAST_MODIFLY_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAUSE_TIME", DbType:="DateTime")>  _
	Public Property PAUSE_TIME() As System.Nullable(Of Date)
		Get
			Return Me._PAUSE_TIME
		End Get
		Set
			If (Me._PAUSE_TIME.Equals(value) = false) Then
				Me.OnPAUSE_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._PAUSE_TIME = value
				Me.SendPropertyChanged("PAUSE_TIME")
				Me.OnPAUSE_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENT_ADMIN", DbType:="NVarChar(MAX)")>  _
	Public Property COMMENT_ADMIN() As String
		Get
			Return Me._COMMENT_ADMIN
		End Get
		Set
			If (String.Equals(Me._COMMENT_ADMIN, value) = false) Then
				Me.OnCOMMENT_ADMINChanging(value)
				Me.SendPropertyChanging
				Me._COMMENT_ADMIN = value
				Me.SendPropertyChanged("COMMENT_ADMIN")
				Me.OnCOMMENT_ADMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_7", DbType:="Int")>  _
	Public Property ATTACH_7() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_7
		End Get
		Set
			If (Me._ATTACH_7.Equals(value) = false) Then
				Me.OnATTACH_7Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_7 = value
				Me.SendPropertyChanged("ATTACH_7")
				Me.OnATTACH_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_8", DbType:="Int")>  _
	Public Property ATTACH_8() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_8
		End Get
		Set
			If (Me._ATTACH_8.Equals(value) = false) Then
				Me.OnATTACH_8Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_8 = value
				Me.SendPropertyChanged("ATTACH_8")
				Me.OnATTACH_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPORT_ONLY", DbType:="NChar(10)")>  _
	Public Property EXPORT_ONLY() As String
		Get
			Return Me._EXPORT_ONLY
		End Get
		Set
			If (String.Equals(Me._EXPORT_ONLY, value) = false) Then
				Me.OnEXPORT_ONLYChanging(value)
				Me.SendPropertyChanging
				Me._EXPORT_ONLY = value
				Me.SendPropertyChanged("EXPORT_ONLY")
				Me.OnEXPORT_ONLYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_9", DbType:="Int")>  _
	Public Property ATTACH_9() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_9
		End Get
		Set
			If (Me._ATTACH_9.Equals(value) = false) Then
				Me.OnATTACH_9Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_9 = value
				Me.SendPropertyChanged("ATTACH_9")
				Me.OnATTACH_9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_10", DbType:="Int")>  _
	Public Property ATTACH_10() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_10
		End Get
		Set
			If (Me._ATTACH_10.Equals(value) = false) Then
				Me.OnATTACH_10Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH_10 = value
				Me.SendPropertyChanged("ATTACH_10")
				Me.OnATTACH_10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTYPECD", DbType:="Int")>  _
	Public Property LCNTYPECD() As System.Nullable(Of Integer)
		Get
			Return Me._LCNTYPECD
		End Get
		Set
			If (Me._LCNTYPECD.Equals(value) = false) Then
				Me.OnLCNTYPECDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTYPECD = value
				Me.SendPropertyChanged("LCNTYPECD")
				Me.OnLCNTYPECDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property STAFF_CITIZEN_ID() As String
		Get
			Return Me._STAFF_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._STAFF_CITIZEN_ID, value) = false) Then
				Me.OnSTAFF_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_CITIZEN_ID = value
				Me.SendPropertyChanged("STAFF_CITIZEN_ID")
				Me.OnSTAFF_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENIOR_STAFF_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property SENIOR_STAFF_CITIZEN_ID() As String
		Get
			Return Me._SENIOR_STAFF_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._SENIOR_STAFF_CITIZEN_ID, value) = false) Then
				Me.OnSENIOR_STAFF_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._SENIOR_STAFF_CITIZEN_ID = value
				Me.SendPropertyChanged("SENIOR_STAFF_CITIZEN_ID")
				Me.OnSENIOR_STAFF_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property MASTER_CITIZEN_ID() As String
		Get
			Return Me._MASTER_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._MASTER_CITIZEN_ID, value) = false) Then
				Me.OnMASTER_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_CITIZEN_ID = value
				Me.SendPropertyChanged("MASTER_CITIZEN_ID")
				Me.OnMASTER_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTRIBUTE", DbType:="NVarChar(MAX)")>  _
	Public Property ATTRIBUTE() As String
		Get
			Return Me._ATTRIBUTE
		End Get
		Set
			If (String.Equals(Me._ATTRIBUTE, value) = false) Then
				Me.OnATTRIBUTEChanging(value)
				Me.SendPropertyChanging
				Me._ATTRIBUTE = value
				Me.SendPropertyChanged("ATTRIBUTE")
				Me.OnATTRIBUTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKING", DbType:="NVarChar(MAX)")>  _
	Public Property PACKING() As String
		Get
			Return Me._PACKING
		End Get
		Set
			If (String.Equals(Me._PACKING, value) = false) Then
				Me.OnPACKINGChanging(value)
				Me.SendPropertyChanging
				Me._PACKING = value
				Me.SendPropertyChanged("PACKING")
				Me.OnPACKINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURPOSE", DbType:="NVarChar(MAX)")>  _
	Public Property PURPOSE() As String
		Get
			Return Me._PURPOSE
		End Get
		Set
			If (String.Equals(Me._PURPOSE, value) = false) Then
				Me.OnPURPOSEChanging(value)
				Me.SendPropertyChanging
				Me._PURPOSE = value
				Me.SendPropertyChanged("PURPOSE")
				Me.OnPURPOSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVE", DbType:="NVarChar(MAX)")>  _
	Public Property OBJECTIVE() As String
		Get
			Return Me._OBJECTIVE
		End Get
		Set
			If (String.Equals(Me._OBJECTIVE, value) = false) Then
				Me.OnOBJECTIVEChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVE = value
				Me.SendPropertyChanged("OBJECTIVE")
				Me.OnOBJECTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRINCE", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRINCE() As String
		Get
			Return Me._DISTRINCE
		End Get
		Set
			If (String.Equals(Me._DISTRINCE, value) = false) Then
				Me.OnDISTRINCEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRINCE = value
				Me.SendPropertyChanged("DISTRINCE")
				Me.OnDISTRINCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE", DbType:="NVarChar(MAX)")>  _
	Public Property PROVINCE() As String
		Get
			Return Me._PROVINCE
		End Get
		Set
			If (String.Equals(Me._PROVINCE, value) = false) Then
				Me.OnPROVINCEChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE = value
				Me.SendPropertyChanged("PROVINCE")
				Me.OnPROVINCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERTIFIES_CHECK1", DbType:="Int")>  _
	Public Property CERTIFIES_CHECK1() As System.Nullable(Of Integer)
		Get
			Return Me._CERTIFIES_CHECK1
		End Get
		Set
			If (Me._CERTIFIES_CHECK1.Equals(value) = false) Then
				Me.OnCERTIFIES_CHECK1Changing(value)
				Me.SendPropertyChanging
				Me._CERTIFIES_CHECK1 = value
				Me.SendPropertyChanged("CERTIFIES_CHECK1")
				Me.OnCERTIFIES_CHECK1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERTIFIES_CHECK2", DbType:="Int")>  _
	Public Property CERTIFIES_CHECK2() As System.Nullable(Of Integer)
		Get
			Return Me._CERTIFIES_CHECK2
		End Get
		Set
			If (Me._CERTIFIES_CHECK2.Equals(value) = false) Then
				Me.OnCERTIFIES_CHECK2Changing(value)
				Me.SendPropertyChanging
				Me._CERTIFIES_CHECK2 = value
				Me.SendPropertyChanged("CERTIFIES_CHECK2")
				Me.OnCERTIFIES_CHECK2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN", DbType:="NVarChar(MAX)")>  _
	Public Property CONTAIN() As String
		Get
			Return Me._CONTAIN
		End Get
		Set
			If (String.Equals(Me._CONTAIN, value) = false) Then
				Me.OnCONTAINChanging(value)
				Me.SendPropertyChanging
				Me._CONTAIN = value
				Me.SendPropertyChanged("CONTAIN")
				Me.OnCONTAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINISH_DATE", DbType:="DateTime")>  _
	Public Property FINISH_DATE() As System.Nullable(Of Date)
		Get
			Return Me._FINISH_DATE
		End Get
		Set
			If (Me._FINISH_DATE.Equals(value) = false) Then
				Me.OnFINISH_DATEChanging(value)
				Me.SendPropertyChanging
				Me._FINISH_DATE = value
				Me.SendPropertyChanged("FINISH_DATE")
				Me.OnFINISH_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_FOOD_WORK_LIMIT")>  _
Partial Public Class CER_FOOD_WORK_LIMIT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As String
	
	Private _SYSTEM_ID As String
	
	Private _WORK_LIMIT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSYSTEM_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSYSTEM_IDChanged()
    End Sub
    Partial Private Sub OnWORK_LIMITChanging(value As String)
    End Sub
    Partial Private Sub OnWORK_LIMITChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_ID", DbType:="NVarChar(50)")>  _
	Public Property SYSTEM_ID() As String
		Get
			Return Me._SYSTEM_ID
		End Get
		Set
			If (String.Equals(Me._SYSTEM_ID, value) = false) Then
				Me.OnSYSTEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_ID = value
				Me.SendPropertyChanged("SYSTEM_ID")
				Me.OnSYSTEM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_LIMIT", DbType:="NVarChar(50)")>  _
	Public Property WORK_LIMIT() As String
		Get
			Return Me._WORK_LIMIT
		End Get
		Set
			If (String.Equals(Me._WORK_LIMIT, value) = false) Then
				Me.OnWORK_LIMITChanging(value)
				Me.SendPropertyChanging
				Me._WORK_LIMIT = value
				Me.SendPropertyChanged("WORK_LIMIT")
				Me.OnWORK_LIMITChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_FOOD_WORK_SCHEDULE")>  _
Partial Public Class CER_FOOD_WORK_SCHEDULE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _RECEIVE_DATE As System.Nullable(Of Date)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _COMPLETE_DATE As System.Nullable(Of Date)
	
	Private _TRANSECTION_ID As String
	
	Private _PROCESS_ID As String
	
	Private _NUMBER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnRECEIVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRECEIVE_DATEChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnCOMPLETE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCOMPLETE_DATEChanged()
    End Sub
    Partial Private Sub OnTRANSECTION_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSECTION_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnNUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnNUMBERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIVE_DATE", DbType:="Date")>  _
	Public Property RECEIVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._RECEIVE_DATE
		End Get
		Set
			If (Me._RECEIVE_DATE.Equals(value) = false) Then
				Me.OnRECEIVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._RECEIVE_DATE = value
				Me.SendPropertyChanged("RECEIVE_DATE")
				Me.OnRECEIVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="Date")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPLETE_DATE", DbType:="Date")>  _
	Public Property COMPLETE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._COMPLETE_DATE
		End Get
		Set
			If (Me._COMPLETE_DATE.Equals(value) = false) Then
				Me.OnCOMPLETE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._COMPLETE_DATE = value
				Me.SendPropertyChanged("COMPLETE_DATE")
				Me.OnCOMPLETE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSECTION_ID", DbType:="NVarChar(50)")>  _
	Public Property TRANSECTION_ID() As String
		Get
			Return Me._TRANSECTION_ID
		End Get
		Set
			If (String.Equals(Me._TRANSECTION_ID, value) = false) Then
				Me.OnTRANSECTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSECTION_ID = value
				Me.SendPropertyChanged("TRANSECTION_ID")
				Me.OnTRANSECTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER", DbType:="NVarChar(50)")>  _
	Public Property NUMBER() As String
		Get
			Return Me._NUMBER
		End Get
		Set
			If (String.Equals(Me._NUMBER, value) = false) Then
				Me.OnNUMBERChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER = value
				Me.SendPropertyChanged("NUMBER")
				Me.OnNUMBERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
